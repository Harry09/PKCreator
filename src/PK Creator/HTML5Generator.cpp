/*
*********************************************************************
* File          : HTML5Generator.cpp
* Project		: PK Creator
* Developers    : Piotr Krupa (piotrkrupa06@gmail.com)
*********************************************************************
*/

#include "HTML5Generator.h"

#include <QFile>
#include <QDir>
#include <QTextStream>

#include <ResourceView.h>
#include <ObjectItem.h>
#include <SpriteItem.h>
#include <SceneItem.h>
#include <Var.h>

#include <SFML/Graphics.hpp>

HTML5Generator::HTML5Generator(const QString &path)
	: CodeGenerator()
{
	m_path = path + "\\HTML5";

	QDir dir(m_path);
	dir.mkpath(m_path);

	m_global += "var canvas = document.getElementById('canvas');\n";
	m_global += "var ctx = canvas.getContext('2d');\n\n";;
}


HTML5Generator::~HTML5Generator()
{
}

void HTML5Generator::GenerateCanvas(const QString & title, const QSize &windowSize)
{
	// head
	m_htmlCode = "<!DOCTYPE html>\r<html>\r<head>\r<title>" + title + "</title>\r</head>\r<body style='margin:0;padding:0;'>\r";

	// body
	m_htmlCode += "<canvas id ='canvas' width='" + QString::number(windowSize.width()) + "' height='" + QString::number(windowSize.height()) + "' style='border:1px solid black;'></canvas>\r";

	// scripts
	m_htmlCode += "<script src='lib.js'></script>\r<script src='script.js'></script>\r</body>\r</html>";
}

void HTML5Generator::GenerateSprite(SpriteItem *sprite)
{
	if (!sprite)
		return;

	QString spriteName = "gameSprite" + sprite->GetName();

	QString newTexturePath = spriteName + "." + sprite->GetTexPath().split(".").last();

	QFile tex(ResourceView::Get()->GetMainDir() + sprite->GetTexPath());
	tex.copy(m_path + "\\" + newTexturePath);

	m_global += "var " + spriteName + ";\n";
	m_init += spriteName + " = new Sprite('" + newTexturePath + "'," + QString::number(sprite->GetCenter().x()) + "," + QString::number(sprite->GetCenter().y()) + ");\n";
}

void HTML5Generator::GenerateScene(SceneItem *scene)
{
	if (!scene)
		return;
	
	QString sceneName = "gameScene" + scene->GetName();

	sf::Color color = sf::Color(scene->GetBgColor());

	auto objects = scene->GetObjects();

	m_global += "var " + sceneName + " = new Scene('rgb(" + QString::number(color.r) + "," + QString::number(color.g) + "," +QString::number(color.b) + ")');\n";

	for (auto sceneObject : *objects)
	{
		QString spriteName = "gameSprite" + sceneObject->pObj->GetSprite()->GetName();
		QString objectName = "sceneObject" + sceneObject->pObj->GetName();

		m_init += "var " + objectName + " = new Instance(" + spriteName + ", " + QString::number(sceneObject->pos.x()) + ", " + QString::number(sceneObject->pos.y()) + ")); \n";

		for (auto var : *sceneObject->pObj->GetVars())
		{
			m_init += objectName + "." + var->m_name + " = ";

			switch (var->m_type)
			{
			case DATA_INTEGER:
				m_init += QString::number(var->m_data.integer);
				break;
			case DATA_NUMBER:
				m_init += QString::number(var->m_data.number, 'f', 10);
				break;
			case DATA_STRING:
				m_init += "'" + *var->m_data.string + "'";
				break;
			case DATA_BOOLEAN:
				m_init += var->m_data.boolean ? "true" : "false";
				break;
			}

			m_init += ";\n";
		}

		m_init += sceneName + ".objects.push('"+ objectName +"');\n";
	}

	// only for debug
	m_init += "currentScene = " + sceneName + ";\n";
}

void HTML5Generator::Save()
{

	QFile htmlFile(m_path + "\\index.html");
	htmlFile.open(QFile::WriteOnly);

	QTextStream stream(&htmlFile);

	QDate date = QDate::currentDate();

	// Header 
	stream << "<!--=================================================-->\n";
	stream << "<!-- Generated by PK Creator -->\n";
	stream << "<!-- PK Creator by Piotr Krupa -->\n";
	stream << "<!-- Source: https://github.com/Harry09/PKCreator -->\n";
	stream << "<!-- Date: " + date.toString() + " -->\n";
	stream << "<!--=================================================-->\n";


	stream << m_htmlCode;
	htmlFile.close();

	QFile jsFile(m_path + "\\script.js");
	jsFile.open(QFile::WriteOnly);

	stream.setDevice(&jsFile);

	// Header
	stream << "/*=================================================*/\n";
	stream << " // Generated by PK Creator\n";
	stream << " // PK Creator by Piotr Krupa\n";
	stream << " // Source: https://github.com/Harry09/PKCreator\n";
	stream << " // Date: " + date.toString() + " \n";
	stream << "/*=================================================*/\n\n";

	// global var
	stream << m_global << "var currentScene;";

	// init
	stream << "\nfunction init()\n{\n" << m_init << "}";

	// render
	stream << 
		"\n\nfunction render()\n"
		"{\n"
		"ctx.fillStyle=currentScene.bgColor;\n"
		"ctx.fillRect(0, 0, 800, 600);\n"
		"for (i = 0; i < currentScene.objects.length; i++)\n"
			"currentScene.objects[i].draw();\n"
		"setTimeout(render, 10);\n"
		"}";

	stream << "\ninit();\nrender();\n";


	// copy lib
	QFile lib("libs\\js\\lib.js");
	lib.copy(m_path + "\\lib.js");
}
